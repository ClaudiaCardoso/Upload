@model SENAI.FalaAiCidadao.UI.Site.ViewModels.PostagemViewModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutLogado.cshtml";
}

<div class="card">
    @using (Html.BeginForm("Create", "Postagem", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <br />
        <div class="card-header" style="background-color:#118fe2; color:white">
            <h3 class="card-title">Nova Postagem</h3>
        </div>
        <div class="card-body">

            <div class="row">
                <div class="col-md-4">
                    <div class="row">
                        <div class="col-lg-12">
                            @Html.LabelFor(model => model.TituloPost, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.TituloPost, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TituloPost, "", new { @class = "text-danger" })
                        </div>

                    </div>


                    <div class="form-group">
                        <label>Região</label>
                        <div>
                            @Html.DropDownListFor(model => model.RegiaoId, (Model.Regioes)
                       .Select(option => new SelectListItem
                       {
                           Text = option.Nome,
                           Value = option.RegiaoId.ToString()
                       }), "Selecione...", new { @class = "form-control" })
                        </div>
                        @Html.ValidationMessageFor(model => model.RegiaoId, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label>Tipo de problema</label>
                        <div>
                            @Html.DropDownListFor(model => model.TipoId, (Model.Tipos)
                       .Select(option => new SelectListItem
                       {
                           Text = option.Descicao,
                           Value = option.TipoId.ToString()
                       }), "Selecione...", new { @class = "form-control" })
                        </div>
                        @Html.ValidationMessageFor(model => model.TipoId, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">

                        <input type="file" name="file" id="file" class="inputfile inputfile-1" multiple />
                        <label for="file" style="background-color:#005afc">
                            <svg xmlns="http://www.w3.org/2000/svg" width="20" height="17" viewBox="0 0 20 17">
                                <path d="M10 0l-5.2 4.9h3.3v5.1h3.8v-5.1h3.3l-5.2-4.9zm9.3 11.5l-3.2-2.1h-2l3.4 2.6h-3.5c-.1 0-.2.1-.2.1l-.8 2.3h-6l-.8-2.2c-.1-.1-.1-.2-.2-.2h-3.6l3.4-2.6h-2l-3.2 2.1c-.4.3-.7 1-.6 1.5l.6 3.1c.1.5.7.9 1.2.9h16.3c.6 0 1.1-.4 1.3-.9l.6-3.1c.1-.5-.2-1.2-.7-1.5z" />
                            </svg> <span>Escolha os arquivos</span>
                        </label>
                        @Html.ValidationMessageFor(model => model.Fotos, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-outline-primary" />
                        </div>
                    </div>





                </div>
                <div class="col-md-8">
                    <div class="col-lg-12">
                        @Html.LabelFor(model => model.TextoPost, htmlAttributes: new { @class = "control-label" })
                        <div class="">
                            @Html.TextAreaFor(model => model.TextoPost, 5, 500, new { @style = "min-width:95% !important; height:325px !important", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.TextoPost, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

            </div>









            @*<div class="row">
                <div class="col-lg-4">
                    @Html.LabelFor(model => model.TituloPost, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.TituloPost, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TituloPost, "", new { @class = "text-danger" })
                </div>
                <div class="col-lg-8">
                    @Html.LabelFor(model => model.TextoPost, htmlAttributes: new { @class = "control-label" })
                    <div class="">
                        @Html.TextAreaFor(model => model.TextoPost, 5, 500, new { @style = "width:1000px !important; height:300px !important" })
                        @Html.ValidationMessageFor(model => model.TextoPost, "", new { @class = "text-danger" })

                    </div>
                </div>
            </div>
            <div class="form-group">
                <label>Região</label>
                <div>
                    @Html.DropDownListFor(model => model.RegiaoId, (Model.Regioes)
                       .Select(option => new SelectListItem
                       {
                           Text = option.Nome,
                           Value = option.RegiaoId.ToString()
                       }), "Selecione...", new { @class = "form-control" })
                </div>
                @Html.ValidationMessageFor(model => model.RegiaoId, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <label>Tipo de problema</label>
                <div>
                    @Html.DropDownListFor(model => model.TipoId, (Model.Tipos)
                       .Select(option => new SelectListItem
                       {
                           Text = option.Descicao,
                           Value = option.TipoId.ToString()
                       }), "Selecione...", new { @class = "form-control" })
                </div>
                @Html.ValidationMessageFor(model => model.TipoId, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">

                <input type="file" name="file" id="file" class="inputfile inputfile-1" multiple />
                <label for="file" style="background-color:#005afc">
                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="17" viewBox="0 0 20 17">
                        <path d="M10 0l-5.2 4.9h3.3v5.1h3.8v-5.1h3.3l-5.2-4.9zm9.3 11.5l-3.2-2.1h-2l3.4 2.6h-3.5c-.1 0-.2.1-.2.1l-.8 2.3h-6l-.8-2.2c-.1-.1-.1-.2-.2-.2h-3.6l3.4-2.6h-2l-3.2 2.1c-.4.3-.7 1-.6 1.5l.6 3.1c.1.5.7.9 1.2.9h16.3c.6 0 1.1-.4 1.3-.9l.6-3.1c.1-.5-.2-1.2-.7-1.5z" />
                    </svg> <span>Escolha os arquivos</span>
                </label>
                @Html.ValidationMessageFor(model => model.Fotos, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-outline-primary" />
                </div>
            </div>*@
        </div>
    }
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
